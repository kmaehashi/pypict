name: "Test"
on: [push, pull_request]

jobs:
    test:
        name: test-${{ matrix.os }}-py${{ matrix.python-version }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macOS-latest]
                python-version: ['3.7', '3.8', '3.9', '3.10']

        steps:
            - name: Git Checkout
              uses: actions/checkout@v2
              with:
                  submodules: recursive

            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Build PICT
              run: |
                  pushd pict
                  make libpict.so
                  make pict
                  echo "${PWD}" >> $GITHUB_PATH
                  echo "LD_LIBRARY_PATH=${PWD}" >> $GITHUB_ENV
                  echo "DYLD_LIBRARY_PATH=${PWD}" >> $GITHUB_ENV
                  popd

            - name: Install dependencies
              run: |
                  pip install Cython pytest flake8 mypy

            - name: Install PyPICT
              run: |
                  pip install -v .

            - name: Show environment
              run: |
                  pip freeze

            - name: Run tests
              run: |
                  pushd tests
                  python -m pypict
                  python -m pytest --import-mode=append .
                  popd

            - name: Run example
              run: |
                  pushd example
                  python example.py
                  python example_capi.py
                  popd

            - name: Run type checking
              if: ${{ matrix.os }} == 'ubuntu-latest'
              run: |
                  mypy pypict example
                  mypy --allow-untyped-defs tests
                  pip install -v -e .
                  bash stubgen.sh
                  [[ $(git diff | wc -l) == 0 ]] && echo "No difference."

            - name: Run coding style check
              run: |
                  flake8 .

    build-wheel:
        runs-on: ubuntu-20.04
        steps:
            - name: Git Checkout
              uses: actions/checkout@v2
              with:
                  submodules: recursive

            - name: Build Wheel
              run: |
                  ./build_wheel.sh
